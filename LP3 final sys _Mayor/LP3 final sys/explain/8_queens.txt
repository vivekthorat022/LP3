**8-Queens Problem using Backtracking:**

1. **Goal:** Place 8 queens on an 8x8 board such that no two queens attack each other (no same row, column, or diagonal).
   
2. **Backtracking Steps:**
   - Place a queen in the first row, then move to the next row.
   - For each row, try placing the queen in each column.
   - **Check if safe:** Ensure no queen shares the same column or diagonal.
   - If placing a queen results in no conflict, move to the next row.
   - If stuck, **backtrack**: remove the last queen and try the next column.
   - Repeat until all queens are placed or no solution exists.

3. **Board Representation:**
   - Use an array `board[]` where `board[i]` represents the column of the queen in row `i`.

4. **Backtracking Pruning:** 
   - If a queen is placed in an unsafe position, backtrack to the previous row and try a different column.

5. **Stopping Condition:** 
   - If queens are placed in all 8 rows without conflict, print the solution.

6. **Time Complexity:** 
   - In the worst case, backtracking explores all possibilities, but pruning makes the process faster.